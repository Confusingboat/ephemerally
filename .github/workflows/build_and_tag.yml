name: Build & Tag

on:
  workflow_dispatch:
  push:
    tags:
      - '*'
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  ArtifactDirectory: ${{ github.workspace}}/artifacts

defaults:
  run:
    shell: pwsh

jobs:
  tag:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: action-minver-refreshed
      id: version
      uses: Stelzi79/action-minver@3.0.1
      with:
        minver-version: 4.3.0

    - name: echo version #version major minor patch prerelease
      run: |
        echo Version: ${{ steps.version.outputs.version }}
        echo major: ${{ steps.version.outputs.major }}, minor: ${{ steps.version.outputs.minor }}, patch: ${{ steps.version.outputs.patch }}
        echo prerelease: ${{ steps.version.outputs.prerelease }}

    # - name: Latest tag
    #   uses: EndBug/latest-tag@v1.5.1

    - name: Version tag
      uses: EndBug/latest-tag@v1.5.1
      with:
        ref: v${{ steps.version.outputs.version }}

  # Cosmos DB Emulator is broken on Ubuntu
  # https://github.com/Azure/azure-cosmos-db-emulator-docker/issues/56
  build_and_test:
    runs-on: windows-2022
    # Reenable when Ubuntu is fixed
    # services:
    #   cosmos:
    #     image: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator
    #     ports:
    #       - 8081:8081
    #       - 10250-10255:10250-10255
    #     env:
    #       AZURE_COSMOS_EMULATOR_PARTITION_COUNT: 3
    #       AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE: true
    steps:
    - uses: actions/checkout@v2

    # Remove when Ubuntu is fixed
    - name: Start Cosmos DB Emulator
      uses: southpolesteve/cosmos-emulator-github-action@v1

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6
        dotnet-quality: ga

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    # Reenable when Ubuntu is fixed
    # - name: Wait for Cosmos Emulator
    #   uses: cygnetdigital/wait_for_response@v2.0.0
    #   with:
    #     url: 'https://localhost:8081/_explorer/index.html'
    #     responseCode: '200,500'
    #     timeout: 5000
    #     interval: 500

    - name: Test
      run: dotnet test --no-build --verbosity normal

  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    needs:
      - tag
      - build_and_test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Archive Release
        uses: thedoctor0/zip-release@0.7.1
        with:
          type: 'tar'
          filename: '${{ needs.tag.outputs.version }}.tar.gz'
          exclusions: '*.git* /*node_modules/* .editorconfig'

      - run: dotnet pack -c Release -o ${{ env.artifactdirectory }} --include-source --include-symbols

      - name: Create GitHub release
        id: release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "${{ env.artifactdirectory }}/*"
          #bodyFile: "body.md"
    