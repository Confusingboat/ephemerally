name: Build & Test

on:
  workflow_dispatch:
  push:
    tags:
      - '*'
    branches:
      - '*'
  pull_request:
    branches:
      - '*'

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  DOTNET_NOLOGO: true
  ArtifactDirectory: ${{ github.workspace}}/artifacts

defaults:
  run:
    shell: pwsh

jobs:
  # Cosmos DB Emulator is broken on Ubuntu
  # https://github.com/Azure/azure-cosmos-db-emulator-docker/issues/56
  build_and_test:
    runs-on: windows-2022
    # Reenable when Ubuntu is fixed
    # services:
    #   cosmos:
    #     image: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator
    #     ports:
    #       - 8081:8081
    #       - 10250-10255:10250-10255
    #     env:
    #       AZURE_COSMOS_EMULATOR_PARTITION_COUNT: 3
    #       AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE: true
    steps:
    - uses: actions/checkout@v2

    # Remove when Ubuntu is fixed
    - name: Start Cosmos DB Emulator
      uses: southpolesteve/cosmos-emulator-github-action@v1

    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6
        dotnet-quality: ga

    - name: Restore dependencies
      run: dotnet restore

    - name: Build
      run: dotnet build --no-restore

    # Reenable when Ubuntu is fixed
    # - name: Wait for Cosmos Emulator
    #   uses: cygnetdigital/wait_for_response@v2.0.0
    #   with:
    #     url: 'https://localhost:8081/_explorer/index.html'
    #     responseCode: '200,500'
    #     timeout: 5000
    #     interval: 500

    - name: Test
      run: dotnet test --no-build --verbosity normal

  tag_and_release:
    if: ${{ github.event_name != 'pull_request' }}
    uses: ./.github/workflows/tag_and_release.yml